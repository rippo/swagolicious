<h1>Swagger</h1>

<div id="list" class="row">
    
    <div id="winner" class="col-md-2">
        @Html.ActionLink("Reset", "Reset")

        <button class="btn btn-primary" data-bind="click: GetNextWinner">Swag</button>

        <div id="winnercontainer" style="display: none;">
            <div class="panel panel-info" data-bind="visible: WinnerShown">
                <div class="panel-heading"><span data-bind="text: Winner"></span></div>
                <div class="panel-body">
                    <img data-bind="attr: { src: WinnerPhoto}" style="width: 69px;height: 78px;" />
                    <span data-bind="text: WinnerSwagThing"></span>
                </div>
            </div>
        </div>

        <div class="flipbox-container">
            <div class="flipbox">
            </div>
        </div>

    </div>


    <div class="col-md-10">

        <ul class="list-inline" data-bind="foreach: { data: Members}">
            <li>
                <div data-bind="css: ApplyPanelClass" class=" row text-center panel member">
                    <div class="panel-heading">
                        <span data-bind="text: Name"></span>
                        <button data-bind="click: $parent.RemoveMember" type="button" class="close">&times;</button>
                    </div>
                    <div class="panel-body">
                        <span data-bind="text: SwagThing"></span>
                    </div>
                </div>
            </li>
        </ul>

    </div>


</div>


@section scripts
{
    <script>
        var memberViewModel = function memberViewModel(data) {
            var self = this;
            self.Id = data.MemberId;
            self.MemberId = ko.observable(data.MemberId);
            self.Name = ko.observable(data.Name);
            self.Photo = ko.observable(data.Photo);
            self.SwagThing = ko.observable(data.SwagThing);
            self.WonSwag = ko.observable(false);
            self.ApplyPanelClass = ko.computed(function() {
                return self.WonSwag() ? "panel-primary" : "panel-warning";
            });
        };

        $.getJSON("/home/memberlist")
            .then(function(rawData) {
                return ko.utils.arrayMap(rawData, function(instanceData) {
                    return new memberViewModel(instanceData);
                });
            })
            .done(function(mappedData) {
                applyBindings(mappedData);
            });

        function applyBindings(data) {
            var masterViewModel = function() {
                var self = this;
                self.Members = ko.observableArray(data);
                self.Winner = ko.observable();
                self.WinnerSwagThing = ko.observable();
                self.WinnerPhoto = ko.observable();
                self.WinnerShown = ko.observable(false);

                self.GetNextWinner = function() {
                    loadNextWinner(self);
                };

                self.RemoveMember = function(member) {
                    $.get("/home/removememberfromgettingswag/" + member.Id)
                        .then(function() {
                            self.Members.remove(member);
                        });
                };
            };

            ko.applyBindings(new masterViewModel());
        }

        function loadNextWinner(model) {

            $.getJSON("/home/nextwinner")
                .then(function(rawData) {
                    if (rawData.MemberId == 0) {
                        alert("done");
                    } else {
                        var nextWinner = ko.utils.arrayFirst(model.Members(), function(member) {
                            return member.Id === rawData.Winner.MemberId;
                        });

                        model.WinnerShown(true);
                        model.Winner(rawData.Winner.Name);
                        model.WinnerSwagThing(rawData.WonSwag.Thing);
                        model.WinnerPhoto(rawData.Winner.Photo);

                        $(".flipbox").flippy({
                            duration: "1000",
                            verso: $('#winnercontainer').html(),
                            onFinish: function() {
                                nextWinner.WonSwag(true);
                                nextWinner.SwagThing(rawData.WonSwag.Thing);
                            }
                        });
                    };
            });
        }
    </script>

}


